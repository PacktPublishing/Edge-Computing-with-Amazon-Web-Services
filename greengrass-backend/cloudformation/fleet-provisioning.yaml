AWSTemplateFormatVersion: "2010-09-09"
Description: Greengrass Policies and Templates
Parameters:
  ProvisioningTemplateName:
    Type: String
  GGTokenExchangeRoleName:
    Type: String
  GGFleetProvisioningRoleName:
    Type: String
  GGDeviceDefaultPolicyName:
    Type: String
  GGProvisioningClaimPolicyName:
    Type: String
  SSMRoleName:
    Type: String
  GGServiceRoleName:
    Type: String
  EnvironmentTag:
    Type: String
Resources:
  SSMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref SSMRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Tags: 
        - Key: Name
          Value: 
            Ref: SSMRoleName
        - Key: EnvironmentTag
          Value:
            Ref: EnvironmentTag
  GGServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref GGServiceRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - greengrass.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy"
      Tags: 
        - Key: Name
          Value: !Sub ${GGServiceRoleName}-alias
        - Key: EnvironmentTag
          Value:
            Ref: EnvironmentTag
  GGTokenExchangeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref GGTokenExchangeRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - credentials.iot.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: !Sub ${GGTokenExchangeRoleName}-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iot:DescribeCertificate"
                Resource:
                  Fn::Join:
                  - ""
                  - - "arn:aws:iot:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - ":*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource:
                  Fn::Join:
                  - ""
                  - - "arn:aws:logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - ":*"
              - Effect: Allow
                Action:
                  - "s3:GetBucketLocation"
                Resource: "arn:aws:s3:::*"
                Condition:
                  StringEquals: 
                    s3:ResourceAccount: 
                      Ref: AWS::AccountId
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:RegisterManagedInstance
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  Fn::Join:
                  - ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - ":role/"
                    - Ref: SSMRoleName
      Tags: 
        - Key: Name
          Value: !Sub ${GGTokenExchangeRoleName}-access
        - Key: EnvironmentTag
          Value:
            Ref: EnvironmentTag
  GGTokenExchangeRoleAlias:
    Type: AWS::IoT::RoleAlias
    Properties:
      RoleArn: !GetAtt GGTokenExchangeRole.Arn
      RoleAlias: !Sub ${GGTokenExchangeRoleName}-alias
      Tags: 
      - Key: Name
        Value: !Sub ${GGTokenExchangeRoleName}-alias
      - Key: EnvironmentTag
        Value:
          Ref: EnvironmentTag
  GGFleetProvisioningRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref GGFleetProvisioningRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration"
      Tags: 
        - Key: Name
          Value: !Sub ${GGFleetProvisioningRoleName}-alias
        - Key: EnvironmentTag
          Value:
            Ref: EnvironmentTag
  GGDeviceDefaultPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Ref GGDeviceDefaultPolicyName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
            - "iot:Connect"
            - "iot:Publish"
            - "iot:Subscribe"
            - "iot:Receive"
            - "iot:Connect"
          Resource:
            Fn::Join:
            - ""
            - - "arn:aws:iot:"
              - Ref: AWS::Region
              - ":"
              - Ref: AWS::AccountId
              - ":*"
        - Effect: Allow
          Action:
            - "greengrass:*"
          Resource: "*"
        - Effect: Allow
          Action:
            - "iot:AssumeRoleWithCertificate"
          Resource: !GetAtt GGTokenExchangeRoleAlias.RoleAliasArn
  GGFleetProvisionTemplate:
    Type: AWS::IoT::ProvisioningTemplate
    Properties:
      TemplateName: !Ref ProvisioningTemplateName
      Description: "Fleet Provisioning template for AWS IoT Greengrass."
      Enabled: True
      ProvisioningRoleArn: !GetAtt GGFleetProvisioningRole.Arn
      TemplateBody: !Sub |+ 
        {
          "Parameters": {
            "ThingName": {
              "Type": "String"
            },
            "ThingGroupName": {
              "Type": "String"
            },
            "AWS::IoT::Certificate::Id": {
              "Type": "String"
            }
          },
          "Resources": {
            "GGThing": {
              "OverrideSettings": {
                "AttributePayload": "REPLACE",
                "ThingGroups": "REPLACE",
                "ThingTypeName": "REPLACE"
              },
              "Properties": {
                "AttributePayload": {},
                "ThingGroups": [
                  {
                    "Ref": "ThingGroupName"
                  }
                ],
                "ThingName": {
                  "Ref": "ThingName"
                }
              },
              "Type": "AWS::IoT::Thing"
            },
            "GGDefaultPolicy": {
              "Properties": {
                "PolicyName": "${GGDeviceDefaultPolicyName}"
              },
              "Type": "AWS::IoT::Policy"
            },
            "GGCertificate": {
              "Properties": {
                "CertificateId": {
                  "Ref": "AWS::IoT::Certificate::Id"
                },
                "Status": "Active"
              },
              "Type": "AWS::IoT::Certificate"
            }
          }
        }
      Tags: 
        - Key: Name
          Value: !Ref ProvisioningTemplateName
        - Key: EnvironmentTag
          Value:
            Ref: EnvironmentTag
  GGProvisioningClaimPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Ref GGProvisioningClaimPolicyName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
            - "iot:Connect"
          Resource:
            Fn::Join:
            - ""
            - - "arn:aws:iot:"
              - Ref: AWS::Region
              - ":"
              - Ref: AWS::AccountId
              - ":*"
        - Effect: Allow
          Action:
            - "iot:Publish"
            - "iot:Receive"
          Resource: 
            - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/certificates/create/*"
            - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/provisioning-templates/${ProvisioningTemplateName}/provision/*"
        - Effect: Allow
          Action:
            - "iot:Subscribe"
          Resource:
            - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/certificates/create/*"
            - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/provisioning-templates/${ProvisioningTemplateName}/provision/*"
Outputs:
  GGTokenExchangeRole:
    Description: Name of token exchange role.
    Value:
      Ref: GGTokenExchangeRole
  GGTokenExchangeRoleAlias:
    Description: Name of token exchange role alias.
    Value:
      Ref: GGTokenExchangeRoleAlias
  GGFleetProvisionTemplate:
    Description: Name of Fleet provisioning template.
    Value:
      Ref: GGFleetProvisionTemplate
  GGProvisioningClaimPolicy:
    Description: Name of claim certificate IoT policy.
    Value:
      Ref: GGProvisioningClaimPolicy
  SSMRole:
    Description: Name of claim certificate IoT policy.
    Value:
      Ref: SSMRole
  GGServiceRole:
    Description: Name of the Greengrass service role.
    Value:
      Ref: GGServiceRole